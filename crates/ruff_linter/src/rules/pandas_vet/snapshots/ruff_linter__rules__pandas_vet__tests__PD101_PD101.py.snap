---
source: crates/ruff_linter/src/rules/pandas_vet/mod.rs
---
error[PD101]: 7:1: Using `series.nunique()` for checking that a series is constant is inefficient

 --> PD101.py:6:8
  |
6 | # PD101
7 | data.nunique() <= 1
  | ^^^^^^^^^^^^^^^^^^^
8 | data.nunique(dropna=True) <= 1
9 | data.nunique(dropna=False) <= 1
  |
error[PD101]: 8:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:7:20
   |
 6 | # PD101
 7 | data.nunique() <= 1
 8 | data.nunique(dropna=True) <= 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 | data.nunique(dropna=False) <= 1
10 | data.nunique() == 1
   |
error[PD101]: 9:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:8:31
   |
 7 | data.nunique() <= 1
 8 | data.nunique(dropna=True) <= 1
 9 | data.nunique(dropna=False) <= 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 | data.nunique() == 1
11 | data.nunique(dropna=True) == 1
   |
error[PD101]: 10:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:9:32
   |
 8 | data.nunique(dropna=True) <= 1
 9 | data.nunique(dropna=False) <= 1
10 | data.nunique() == 1
   | ^^^^^^^^^^^^^^^^^^^
11 | data.nunique(dropna=True) == 1
12 | data.nunique(dropna=False) == 1
   |
error[PD101]: 11:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:10:20
   |
 9 | data.nunique(dropna=False) <= 1
10 | data.nunique() == 1
11 | data.nunique(dropna=True) == 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 | data.nunique(dropna=False) == 1
13 | data.nunique() != 1
   |
error[PD101]: 12:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:11:31
   |
10 | data.nunique() == 1
11 | data.nunique(dropna=True) == 1
12 | data.nunique(dropna=False) == 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 | data.nunique() != 1
14 | data.nunique(dropna=True) != 1
   |
error[PD101]: 13:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:12:32
   |
11 | data.nunique(dropna=True) == 1
12 | data.nunique(dropna=False) == 1
13 | data.nunique() != 1
   | ^^^^^^^^^^^^^^^^^^^
14 | data.nunique(dropna=True) != 1
15 | data.nunique(dropna=False) != 1
   |
error[PD101]: 14:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:13:20
   |
12 | data.nunique(dropna=False) == 1
13 | data.nunique() != 1
14 | data.nunique(dropna=True) != 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | data.nunique(dropna=False) != 1
16 | data.nunique() > 1
   |
error[PD101]: 15:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:14:31
   |
13 | data.nunique() != 1
14 | data.nunique(dropna=True) != 1
15 | data.nunique(dropna=False) != 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 | data.nunique() > 1
17 | data.dropna().nunique() == 1
   |
error[PD101]: 16:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:15:32
   |
14 | data.nunique(dropna=True) != 1
15 | data.nunique(dropna=False) != 1
16 | data.nunique() > 1
   | ^^^^^^^^^^^^^^^^^^
17 | data.dropna().nunique() == 1
18 | data[data.notnull()].nunique() == 1
   |
error[PD101]: 17:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:16:19
   |
15 | data.nunique(dropna=False) != 1
16 | data.nunique() > 1
17 | data.dropna().nunique() == 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 | data[data.notnull()].nunique() == 1
   |
error[PD101]: 18:1: Using `series.nunique()` for checking that a series is constant is inefficient

  --> PD101.py:17:29
   |
16 | data.nunique() > 1
17 | data.dropna().nunique() == 1
18 | data[data.notnull()].nunique() == 1
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 | 
20 | # No violation of this rule
   |
