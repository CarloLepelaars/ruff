---
source: crates/ruff_linter/src/rules/flake8_use_pathlib/mod.rs
---
error[PTH100]: 7:5: `os.path.abspath()` should be replaced by `Path.resolve()`

 --> full_name.py:7:5
  |
5 | q = "bar"
6 | 
7 | a = os.path.abspath(p)
  |     ^^^^^^^^^^^^^^^
8 | aa = os.chmod(p)
9 | aaa = os.mkdir(p)
  |
error[PTH101]: 8:6: `os.chmod()` should be replaced by `Path.chmod()`

  --> full_name.py:8:6
   |
 7 | a = os.path.abspath(p)
 8 | aa = os.chmod(p)
   |      ^^^^^^^^
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
   |
error[PTH102]: 9:7: `os.mkdir()` should be replaced by `Path.mkdir()`

  --> full_name.py:9:7
   |
 7 | a = os.path.abspath(p)
 8 | aa = os.chmod(p)
 9 | aaa = os.mkdir(p)
   |       ^^^^^^^^
10 | os.makedirs(p)
11 | os.rename(p)
   |
error[PTH103]: 10:1: `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`

  --> full_name.py:9:18
   |
 8 | aa = os.chmod(p)
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
   | ^^^^^^^^^^^
11 | os.rename(p)
12 | os.replace(p)
   |
error[PTH104]: 11:1: `os.rename()` should be replaced by `Path.rename()`

  --> full_name.py:10:15
   |
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
11 | os.rename(p)
   | ^^^^^^^^^
12 | os.replace(p)
13 | os.rmdir(p)
   |
error[PTH105]: 12:1: `os.replace()` should be replaced by `Path.replace()`

  --> full_name.py:11:13
   |
10 | os.makedirs(p)
11 | os.rename(p)
12 | os.replace(p)
   | ^^^^^^^^^^
13 | os.rmdir(p)
14 | os.remove(p)
   |
error[PTH106]: 13:1: `os.rmdir()` should be replaced by `Path.rmdir()`

  --> full_name.py:12:14
   |
11 | os.rename(p)
12 | os.replace(p)
13 | os.rmdir(p)
   | ^^^^^^^^
14 | os.remove(p)
15 | os.unlink(p)
   |
error[PTH107]: 14:1: `os.remove()` should be replaced by `Path.unlink()`

  --> full_name.py:13:12
   |
12 | os.replace(p)
13 | os.rmdir(p)
14 | os.remove(p)
   | ^^^^^^^^^
15 | os.unlink(p)
16 | os.getcwd(p)
   |
error[PTH108]: 15:1: `os.unlink()` should be replaced by `Path.unlink()`

  --> full_name.py:14:13
   |
13 | os.rmdir(p)
14 | os.remove(p)
15 | os.unlink(p)
   | ^^^^^^^^^
16 | os.getcwd(p)
17 | b = os.path.exists(p)
   |
error[PTH109]: 16:1: `os.getcwd()` should be replaced by `Path.cwd()`

  --> full_name.py:15:13
   |
14 | os.remove(p)
15 | os.unlink(p)
16 | os.getcwd(p)
   | ^^^^^^^^^
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
   |
error[PTH110]: 17:5: `os.path.exists()` should be replaced by `Path.exists()`

  --> full_name.py:17:5
   |
15 | os.unlink(p)
16 | os.getcwd(p)
17 | b = os.path.exists(p)
   |     ^^^^^^^^^^^^^^
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
   |
error[PTH111]: 18:6: `os.path.expanduser()` should be replaced by `Path.expanduser()`

  --> full_name.py:18:6
   |
16 | os.getcwd(p)
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
   |      ^^^^^^^^^^^^^^^^^^
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
   |
error[PTH112]: 19:7: `os.path.isdir()` should be replaced by `Path.is_dir()`

  --> full_name.py:19:7
   |
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
   |       ^^^^^^^^^^^^^
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
   |
error[PTH113]: 20:8: `os.path.isfile()` should be replaced by `Path.is_file()`

  --> full_name.py:20:8
   |
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
   |        ^^^^^^^^^^^^^^
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
   |
error[PTH114]: 21:9: `os.path.islink()` should be replaced by `Path.is_symlink()`

  --> full_name.py:21:9
   |
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
   |         ^^^^^^^^^^^^^^
22 | os.readlink(p)
23 | os.stat(p)
   |
error[PTH115]: 22:1: `os.readlink()` should be replaced by `Path.readlink()`

  --> full_name.py:21:26
   |
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
   | ^^^^^^^^^^^
23 | os.stat(p)
24 | os.path.isabs(p)
   |
error[PTH116]: 23:1: `os.stat()` should be replaced by `Path.stat()`, `Path.owner()`, or `Path.group()`

  --> full_name.py:22:15
   |
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
23 | os.stat(p)
   | ^^^^^^^
24 | os.path.isabs(p)
25 | os.path.join(p, q)
   |
error[PTH117]: 24:1: `os.path.isabs()` should be replaced by `Path.is_absolute()`

  --> full_name.py:23:11
   |
22 | os.readlink(p)
23 | os.stat(p)
24 | os.path.isabs(p)
   | ^^^^^^^^^^^^^
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
   |
error[PTH118]: 25:1: `os.path.join()` should be replaced by `Path` with `/` operator

  --> full_name.py:24:17
   |
23 | os.stat(p)
24 | os.path.isabs(p)
25 | os.path.join(p, q)
   | ^^^^^^^^^^^^
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
   |
error[PTH118]: 26:1: `os.sep.join()` should be replaced by `Path` with `/` operator

  --> full_name.py:25:19
   |
24 | os.path.isabs(p)
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
   | ^^^^^^^^^^^
27 | os.sep.join((p, q))
28 | os.path.basename(p)
   |
error[PTH118]: 27:1: `os.sep.join()` should be replaced by `Path` with `/` operator

  --> full_name.py:26:20
   |
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
   | ^^^^^^^^^^^
28 | os.path.basename(p)
29 | os.path.dirname(p)
   |
error[PTH119]: 28:1: `os.path.basename()` should be replaced by `Path.name`

  --> full_name.py:27:20
   |
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
28 | os.path.basename(p)
   | ^^^^^^^^^^^^^^^^
29 | os.path.dirname(p)
30 | os.path.samefile(p)
   |
error[PTH120]: 29:1: `os.path.dirname()` should be replaced by `Path.parent`

  --> full_name.py:28:20
   |
27 | os.sep.join((p, q))
28 | os.path.basename(p)
29 | os.path.dirname(p)
   | ^^^^^^^^^^^^^^^
30 | os.path.samefile(p)
31 | os.path.splitext(p)
   |
error[PTH121]: 30:1: `os.path.samefile()` should be replaced by `Path.samefile()`

  --> full_name.py:29:19
   |
28 | os.path.basename(p)
29 | os.path.dirname(p)
30 | os.path.samefile(p)
   | ^^^^^^^^^^^^^^^^
31 | os.path.splitext(p)
32 | with open(p) as fp:
   |
error[PTH122]: 31:1: `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`

  --> full_name.py:30:20
   |
29 | os.path.dirname(p)
30 | os.path.samefile(p)
31 | os.path.splitext(p)
   | ^^^^^^^^^^^^^^^^
32 | with open(p) as fp:
33 |     fp.read()
   |
error[PTH123]: 32:6: `open()` should be replaced by `Path.open()`

  --> full_name.py:32:6
   |
30 | os.path.samefile(p)
31 | os.path.splitext(p)
32 | with open(p) as fp:
   |      ^^^^
33 |     fp.read()
34 | open(p).close()
   |
error[PTH123]: 34:1: `open()` should be replaced by `Path.open()`

  --> full_name.py:33:14
   |
32 | with open(p) as fp:
33 |     fp.read()
34 | open(p).close()
   | ^^^^
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
   |
error[PTH109]: 35:1: `os.getcwd()` should be replaced by `Path.cwd()`

  --> full_name.py:34:16
   |
33 |     fp.read()
34 | open(p).close()
35 | os.getcwdb(p)
   | ^^^^^^^^^^
36 | os.path.join(p, *q)
37 | os.sep.join(p, *q)
   |
error[PTH118]: 36:1: `os.path.join()` should be replaced by `Path.joinpath()`

  --> full_name.py:35:14
   |
34 | open(p).close()
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
   | ^^^^^^^^^^^^
37 | os.sep.join(p, *q)
   |
error[PTH118]: 37:1: `os.sep.join()` should be replaced by `Path.joinpath()`

  --> full_name.py:36:20
   |
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
37 | os.sep.join(p, *q)
   | ^^^^^^^^^^^
38 | 
39 | # https://github.com/astral-sh/ruff/issues/7620
   |
error[PTH123]: 46:1: `open()` should be replaced by `Path.open()`

  --> full_name.py:45:23
   |
44 | open(p, closefd=False)
45 | open(p, opener=opener)
46 | open(p, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
   | ^^^^
47 | open(p, 'r', - 1, None, None, None, True, None)
48 | open(p, 'r', - 1, None, None, None, False, opener)
   |
error[PTH123]: 47:1: `open()` should be replaced by `Path.open()`

  --> full_name.py:46:101
   |
45 | open(p, opener=opener)
46 | open(p, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
47 | open(p, 'r', - 1, None, None, None, True, None)
   | ^^^^
48 | open(p, 'r', - 1, None, None, None, False, opener)
   |
