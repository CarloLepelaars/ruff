---
source: crates/ruff_linter/src/rules/flake8_pyi/mod.rs
---
error[PYI051]: 4:18: `Literal["foo"]` is redundant in a union with `str`

 --> PYI051.py:4:18
  |
2 | from typing import Literal, TypeAlias, Union
3 | 
4 | A: str | Literal["foo"]
  |                  ^^^^^
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
  |
error[PYI051]: 5:37: `Literal[b"bar"]` is redundant in a union with `bytes`

 --> PYI051.py:5:37
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
  |                                     ^^^^^^
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |
error[PYI051]: 5:45: `Literal[b"foo"]` is redundant in a union with `bytes`

 --> PYI051.py:5:45
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
  |                                             ^^^^^^
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |
error[PYI051]: 6:37: `Literal[5]` is redundant in a union with `int`

 --> PYI051.py:6:37
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
  |                                     ^
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |
error[PYI051]: 6:67: `Literal["foo"]` is redundant in a union with `str`

 --> PYI051.py:6:67
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
  |                                                                   ^^^^^
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |
error[PYI051]: 7:37: `Literal[b"str_bytes"]` is redundant in a union with `bytes`

 --> PYI051.py:7:37
  |
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |                                     ^^^^^^^^^^^^
8 | 
9 | def func(x: complex | Literal[1J], y: Union[Literal[3.14], float]): ...
  |
error[PYI051]: 7:51: `Literal[42]` is redundant in a union with `int`

 --> PYI051.py:7:51
  |
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |                                                   ^^
8 | 
9 | def func(x: complex | Literal[1J], y: Union[Literal[3.14], float]): ...
  |
error[PYI051]: 9:31: `Literal[1J]` is redundant in a union with `complex`

  --> PYI051.py:9:31
   |
 7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
 8 | 
 9 | def func(x: complex | Literal[1J], y: Union[Literal[3.14], float]): ...
   |                               ^^
10 | 
11 | # OK
   |
error[PYI051]: 9:53: `Literal[3.14]` is redundant in a union with `float`

  --> PYI051.py:9:53
   |
 7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
 8 | 
 9 | def func(x: complex | Literal[1J], y: Union[Literal[3.14], float]): ...
   |                                                     ^^^^
10 | 
11 | # OK
   |
